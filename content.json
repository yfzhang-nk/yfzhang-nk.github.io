{"meta":{"title":"五灯","subtitle":"","description":"","author":"Yifei Zhang","url":"http://yfzhang-nk.github.io","root":"/"},"pages":[{"title":"关于我","date":"2020-06-26T08:48:35.000Z","updated":"2020-06-26T08:50:35.433Z","comments":true,"path":"about/index.html","permalink":"http://yfzhang-nk.github.io/about/index.html","excerpt":"","text":""},{"title":"Contributors 「鸣谢」","date":"2020-06-26T07:46:55.000Z","updated":"2020-06-26T08:21:53.697Z","comments":true,"path":"contributors/index.html","permalink":"http://yfzhang-nk.github.io/contributors/index.html","excerpt":"","text":"特别鸣谢 hexo 开发者和 Volantis 主题开发者，以及王庆彬的主题配置 Hexo volantis 王庆彬"},{"title":"所有标签","date":"2020-06-26T08:01:36.000Z","updated":"2020-06-26T08:02:12.129Z","comments":true,"path":"tags/index.html","permalink":"http://yfzhang-nk.github.io/tags/index.html","excerpt":"","text":""},{"title":"所有分类","date":"2020-06-26T07:55:46.000Z","updated":"2020-06-26T07:57:43.055Z","comments":true,"path":"categories/index.html","permalink":"http://yfzhang-nk.github.io/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"每个程序员应该知道的97件事","slug":"97things-every-programmer-should-know","date":"2020-07-08T07:33:53.000Z","updated":"2020-07-08T08:10:33.453Z","comments":true,"path":"2020/ckcd1q803000704xf0ca6gryg/","link":"","permalink":"http://yfzhang-nk.github.io/2020/ckcd1q803000704xf0ca6gryg/","excerpt":"","text":"极客时间上购买了左耳听风的专栏，就是陈皓（左耳朵耗子）一个关于技术、成长、管理的文章合集，内容确实是丰富。 首先作者提供了一个程序员练级的方法，叫做ARTS，就是每周完成一个ARTS： Algorithm：每周至少做一道算法题； Review：阅读并点评至少一篇英文技术文章； Tip：学习至少一个技术技巧； Share：分享一篇有观点和思考的技术文章。 刚好其中一篇关于程序员修养的文章推荐了《97 Things Every Programmer Should Know》，有很多编程方面的建议，文章也都很经典，且都是英文文章，可以满足Review的内容，每周至少一篇，将该系列的文章翻译到自己的博客中，顺带提高自己的英文水平。没有商业目的，只为提升自己。 以下为我的文章链接: 程序员应该知道的97件事-1 三思而行","categories":[{"name":"英文文章翻译","slug":"英文文章翻译","permalink":"http://yfzhang-nk.github.io/categories/%E8%8B%B1%E6%96%87%E6%96%87%E7%AB%A0%E7%BF%BB%E8%AF%91/"}],"tags":[{"name":"程序员修养","slug":"程序员修养","permalink":"http://yfzhang-nk.github.io/tags/%E7%A8%8B%E5%BA%8F%E5%91%98%E4%BF%AE%E5%85%BB/"},{"name":"程序员应该知道的97件事","slug":"程序员应该知道的97件事","permalink":"http://yfzhang-nk.github.io/tags/%E7%A8%8B%E5%BA%8F%E5%91%98%E5%BA%94%E8%AF%A5%E7%9F%A5%E9%81%93%E7%9A%8497%E4%BB%B6%E4%BA%8B/"}]},{"title":"程序员应该知道的97件事-1 三思而行","slug":"act-with-prudence","date":"2020-07-08T03:38:57.000Z","updated":"2020-07-08T08:01:09.917Z","comments":true,"path":"2020/ckcctc3y7000004xfdqwd7aar/","link":"","permalink":"http://yfzhang-nk.github.io/2020/ckcctc3y7000004xfdqwd7aar/","excerpt":"Whatever you undertake 开启对「97 Things Every Programmer Should Know」的翻译，今天是第一篇「Act with Prudence」","text":"Whatever you undertake 开启对「97 Things Every Programmer Should Know」的翻译，今天是第一篇「Act with Prudence」 原文链接：Act with Prudence 三思而行不管你做什么，都应该三思而行且考虑后果 阿农 在一次迭代的开始，不管日程表规划的多么舒服，有些时候都无法避免的面临压力。当面对“好好做”还是“快快做”的选择时，我们经常倾向于选择“快快做”，并告诉自己我之后会回来修复它。当对自己、团队以及客户做出这样承诺时，我们是认真的。但时常下一次迭代带来了新的问题，我们必须聚焦在新问题上。这种延迟的工作被称作“技术债务”，它是程序员的天敌。Martin Fowler把这种有意的技术债务收录到自己的技术债务分类中，以区分非主动的技术债务。 技术债务类似贷款：你短期内能从中获取收益，但在还清前不得不付利息给它。代码中走捷径会让它很难增加新功能或者进行重构。这是缺陷和脆弱测试案例的滋生源泉。留它越久，就会越糟糕。当着手解决最开始的那个问题时，摆在面前的是一系列“不太好的”设计导致了代码很难重构或者纠正问题。实际上，只有事情发展到不得不解决它时，我们才会回去修复问题。到那时经常修复问题变得很困难，以至于我们没有办法承担时间成本和风险。 大多数的技术债务来源于我们面临最后期限或者是非常简单的小需求。除非情况要求你必须这样，否则别让自己陷入这种境地。但是你一定要记录它，并且尽快回来修复掉，否则你的情况很快变坏。只要你做了这种妥协的决定，就一定写下一个任务卡记录到你的追踪系统里，确定自己不会忘记。 要想损失最小，最好在下次迭代中规划修复工作。如果保留技术债务可以给你带来收益，那也要让这个收益的成本可见。这会在强调技术债务的商业价值时，将修复工作放在合适的优先级上。计算和追踪保留技术债务的收益需要具体项目具体分析，但是一定要记录下来。 尽快还清技术债务，否则是不明智的。 By Seb Rose 单词on the understanding that 如果；在…条件下all too often 时常，经常是breeding grounds 滋生地get around to 抽时间出来做…；开始考虑做…accrue v. 产生；自然增长或利益增加；积累imprudent adj. 轻率的，鲁莽的；不明智的 个人观点技术债务是程序员无法逃避的问题，作者提到了这种有意为之的技术债务，来自于迭代的时间紧迫，或者功能简单，所以采用了不是最优的，但是能够快速实验的解决方案。在国内（不确定国外有没有)还有一个可能是这个人要离职（或者是离开项目）不会考虑后续维护之类的事情，留下了粗糙的代码。因此接手项目或者管理手下时，注意这样的情况，自身也尽量避免成为这样糟糕的程序员。","categories":[{"name":"英文文章翻译","slug":"英文文章翻译","permalink":"http://yfzhang-nk.github.io/categories/%E8%8B%B1%E6%96%87%E6%96%87%E7%AB%A0%E7%BF%BB%E8%AF%91/"}],"tags":[{"name":"程序员修养","slug":"程序员修养","permalink":"http://yfzhang-nk.github.io/tags/%E7%A8%8B%E5%BA%8F%E5%91%98%E4%BF%AE%E5%85%BB/"},{"name":"程序员应该知道的97件事","slug":"程序员应该知道的97件事","permalink":"http://yfzhang-nk.github.io/tags/%E7%A8%8B%E5%BA%8F%E5%91%98%E5%BA%94%E8%AF%A5%E7%9F%A5%E9%81%93%E7%9A%8497%E4%BB%B6%E4%BA%8B/"}]},{"title":"博客开篇","slug":"hello-world","date":"2020-07-07T09:31:51.416Z","updated":"2020-07-07T09:31:51.417Z","comments":true,"path":"2020/ckcbpr3wo0001xoxf4ehz6gv5/","link":"","permalink":"http://yfzhang-nk.github.io/2020/ckcbpr3wo0001xoxf4ehz6gv5/","excerpt":"Hexo博客第一篇，说说自己为什么要写博客，博客写什么东西，以及之后的计划。","text":"Hexo博客第一篇，说说自己为什么要写博客，博客写什么东西，以及之后的计划。 开篇一晃都码农十年了，期间在外企打过工、在民企写过代码、创过业、当过外包老板，现在在某大公司安安稳稳的过着995生活。养孩子和供房子，加上疫情和经济大环境不好，没了折腾的动力和能力，索性安安稳稳中积累自己的能力，通过博客记录自己的学习过程，也作为一个输出的阵地，顺带提高下写作功力。 写点啥技术学习 虽然作为一个老码农，仍然还是有很多技术盲区，之后的学习不能局限于阅读，会通过博文内化为信手拈来的东西。当然还会有一部分是对英文内容的翻译（不是纯翻译，会改变为自己的语言)。 非技术知识 一个人的知识结构应该像一架飞机，机身为自身专业能力，需要深入，飞机的机翼也是必不可少的，知识架构上代表了知识广度，这几年由于参加CPA考试，学习了很多财务分析知识；跟随得到也听了很多非常不错的经济、金融、管理的课程（还有些杂七杂八的内容）。看完听过之后，也会在博客上进行输出。 记录 个人随笔，记录点感悟和日记； 儿童编程教育，我对其发展比较看好，因此会记录些自己的调研结果和想法； 如果可能，做些自己感兴趣的影视分析，热点评论。 咋计划2020年还会花费更多的时间去进行CPA备考，先计划“翻译翻译”《97 things every programmer should know》，随后不追求每月必须有多少篇，但是只要觉得有用我就会记录下来。 奔着卓越努力！","categories":[{"name":"随笔","slug":"随笔","permalink":"http://yfzhang-nk.github.io/categories/%E9%9A%8F%E7%AC%94/"}],"tags":[{"name":"生活","slug":"生活","permalink":"http://yfzhang-nk.github.io/tags/%E7%94%9F%E6%B4%BB/"}]}],"categories":[{"name":"英文文章翻译","slug":"英文文章翻译","permalink":"http://yfzhang-nk.github.io/categories/%E8%8B%B1%E6%96%87%E6%96%87%E7%AB%A0%E7%BF%BB%E8%AF%91/"},{"name":"随笔","slug":"随笔","permalink":"http://yfzhang-nk.github.io/categories/%E9%9A%8F%E7%AC%94/"}],"tags":[{"name":"程序员修养","slug":"程序员修养","permalink":"http://yfzhang-nk.github.io/tags/%E7%A8%8B%E5%BA%8F%E5%91%98%E4%BF%AE%E5%85%BB/"},{"name":"程序员应该知道的97件事","slug":"程序员应该知道的97件事","permalink":"http://yfzhang-nk.github.io/tags/%E7%A8%8B%E5%BA%8F%E5%91%98%E5%BA%94%E8%AF%A5%E7%9F%A5%E9%81%93%E7%9A%8497%E4%BB%B6%E4%BA%8B/"},{"name":"生活","slug":"生活","permalink":"http://yfzhang-nk.github.io/tags/%E7%94%9F%E6%B4%BB/"}]}